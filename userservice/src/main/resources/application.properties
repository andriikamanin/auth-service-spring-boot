spring.application.name=userservice

# DATABASE
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# APP URLs
app.backend-base-url=${BACKEND_BASE_URL}
app.frontend-base-url=${FRONTEND_BASE_URL}

# JWT
jwt.secret=${JWT_SECRET}

# Redis
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}

# Server port
server.port=8081

# Kafka
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.consumer.group-id=user-service

# Kafka Deserialization with Error Handling
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=it.volta.ts.*
spring.kafka.consumer.properties.spring.json.value.default.type=it.volta.ts.userservice.dto.UserEmailChangedEvent

# AWS
aws.s3.bucket=${AWS_S3_BUCKET}
aws.region=${AWS_REGION}
aws.access-key=${AWS_ACCESS_KEY}
aws.secret-key=${AWS_SECRET_KEY}

# Liquibase
spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.xml